}
else if(Data_housing_Irma$state[i] == "MS")
{
population_temp = population_10_19[population_10_19$state == "Mississippi" & population_10_19$countyName == Data_housing_Irma$county[i],]$`2017`[1]
population = c(population,population_temp)
homeownership_rate_temp = MS_h[MS_h$Name == Data_housing_Irma$county[i],]$`2017`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
else if(Data_housing_Irma$state[i] == "SC")
{
population_temp = population_10_19[population_10_19$state == "SouthCarolina" & population_10_19$countyName == Data_housing_Irma$county[i],]$`2017`[1]
population = c(population,population_temp)
homeownership_rate_temp = SC_h[SC_h$Name == Data_housing_Irma$county[i],]$`2017`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
else if(Data_housing_Irma$state[i] == "TX")
{
population_temp = population_10_19[population_10_19$state == "Texas" & population_10_19$countyName == Data_housing_Irma$county[i],]$`2017`[1]
population = c(population,population_temp)
homeownership_rate_temp = TX_h[TX_h$Name == Data_housing_Irma$county[i],]$`2017`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
hwm_temp = f_Irma[f_Irma$stateName == Data_housing_Irma$state[i] & f_Irma$countyName == Data_housing_Irma$county[i],]$height_above_gnd[1]
hwm = c(hwm,hwm_temp)
}
Data_housing_Irma$SVI = SVI
Data_housing_Irma$population = population
Data_housing_Irma$homeownership_rate = homeownership_rate
Data_housing_Irma$hwm = hwm
Data_housing_Irma$wind_50_up = Data_housing_Irma$wind_50_64 + Data_housing_Irma$wind_64_up
Data_housing_Irma[is.na(Data_housing_Irma)] = 0
mapview(us_study_counties,zcol = "Irma1") + draw_track_map(track_Irma)
temp = data.frame(longitude = Data_housing_Irma$longitude, latitude = Data_housing_Irma$latitude, wind_duration_Irma  = Data_housing_Irma$wind_50_up, Irma_HWM = Data_housing_Irma$hwm)
Irma_wind_duration = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "wind_duration_Irma", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "wind_duration_Irma")
Irma_wind_duration
Irma_HWM = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "Irma_HWM", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "hwm_Irma")
Irma_HWM
rm(temp)
# FLORENCE
Data_housing_Florence = Data_all[Data_housing$event_title == "HURRICANE FLORENCE",]
demand2 = c()
demand1 = c()
for(i in 1:nrow(us_study_counties))
{
demand1 = c(demand1,Data_housing_Florence[Data_housing_Florence$county == us_study_counties$NAME[i] & Data_housing_Florence$state == us_study_counties$STATEFP[i],]$type1[1])
demand2 = c(demand2,Data_housing_Florence[Data_housing_Florence$county == us_study_counties$NAME[i] & Data_housing_Florence$state == us_study_counties$STATEFP[i],]$type2[1])
}
us_study_counties$Florence1 = demand1
us_study_counties$Florence2 = demand2
##collect FLORENCE Time(distance) , wind and side data
start_node = which(track_Florence$TIME_UTC == "1115" & track_Florence$DATE == "20180914")
wind_34_down = rep(0, nrow(Data_housing_Florence))
wind_34_50 = rep(0, nrow(Data_housing_Florence))
wind_50_64 = rep(0, nrow(Data_housing_Florence))
wind_64_up = rep(0, nrow(Data_housing_Florence))
Data_housing_Florence$wind_34_down = wind_34_down
Data_housing_Florence$wind_34_50 = wind_34_50
Data_housing_Florence$wind_50_64 = wind_50_64
Data_housing_Florence$wind_64_up = wind_64_up
Data_housing_Florence = wind_distance(track_Florence,Data_housing_Florence,start_node)
SVI = c()
population = c()
homeownership_rate = c()
hwm = c()
for(i in 1:nrow(Data_housing_Florence))
{
svi_temp = svi_2018[svi_2018$countyName == Data_housing_Florence$county[i] & svi_2018$state == Data_housing_Florence$state[i],]$SVI[1]
SVI = c(SVI,svi_temp)
if(Data_housing_Florence$state[i] == "NC")
{
population_temp = population_10_19[population_10_19$state == "NorthCarolina" & population_10_19$countyName == Data_housing_Florence$county[i],]$`2018`[1]
population = c(population,population_temp)
homeownership_rate_temp = NC_h[NC_h$Name == Data_housing_Florence$county[i],]$`2018`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
else if(Data_housing_Florence$state[i] == "SC")
{
population_temp = population_10_19[population_10_19$state == "SouthCarolina" & population_10_19$countyName == Data_housing_Florence$county[i],]$`2018`[1]
population = c(population,population_temp)
homeownership_rate_temp = SC_h[SC_h$Name == Data_housing_Florence$county[i],]$`2018`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
hwm_temp = f_Florence[f_Florence$stateName == Data_housing_Florence$state[i] & f_Florence$countyName == Data_housing_Florence$county[i],]$height_above_gnd[1]
hwm = c(hwm,hwm_temp)
}
Data_housing_Florence$SVI = SVI
Data_housing_Florence$population = population
Data_housing_Florence$homeownership_rate = homeownership_rate
Data_housing_Florence$hwm = hwm
Data_housing_Florence$wind_50_up = Data_housing_Florence$wind_50_64 + Data_housing_Florence$wind_64_up
Data_housing_Florence[is.na(Data_housing_Florence)] = 0
mapview(us_study_counties,zcol = "Florence1") + draw_track_map(track_Florence)
temp = data.frame(longitude = Data_housing_Florence$longitude, latitude = Data_housing_Florence$latitude, wind_duration_Florence = Data_housing_Florence$wind_50_up, Florence_HWM = Data_housing_Florence$hwm)
Florence_wind_duration = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "wind_duration_Florence", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "wind_duration_Florence")
Florence_wind_duration
Florence_HWM = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "Florence_HWM", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "hwm_Florence")
Florence_HWM
rm(temp)
# MICHAEL
Data_housing_Michael = Data_all[Data_housing$event_title == "HURRICANE MICHAEL",]
demand2 = c()
demand1 = c()
for(i in 1:nrow(us_study_counties))
{
demand1 = c(demand1,Data_housing_Michael[Data_housing_Michael$county == us_study_counties$NAME[i] & Data_housing_Michael$state == us_study_counties$STATEFP[i],]$type1[1])
demand2 = c(demand2,Data_housing_Michael[Data_housing_Michael$county == us_study_counties$NAME[i] & Data_housing_Michael$state == us_study_counties$STATEFP[i],]$type2[1])
}
us_study_counties$Michael1 = demand1
us_study_counties$Michael2 = demand2
##collect MICHAEL Time(distance) , wind and side data
start_node = which(track_Michael$TIME_UTC == "1730" & track_Michael$DATE == "20181010")
wind_34_down = rep(0, nrow(Data_housing_Michael))
wind_34_50 = rep(0, nrow(Data_housing_Michael))
wind_50_64 = rep(0, nrow(Data_housing_Michael))
wind_64_up = rep(0, nrow(Data_housing_Michael))
Data_housing_Michael$wind_34_down = wind_34_down
Data_housing_Michael$wind_34_50 = wind_34_50
Data_housing_Michael$wind_50_64 = wind_50_64
Data_housing_Michael$wind_64_up = wind_64_up
Data_housing_Michael = wind_distance(track_Michael,Data_housing_Michael,start_node)
SVI = c()
population = c()
homeownership_rate = c()
hwm = c()
for(i in 1:nrow(Data_housing_Michael))
{
svi_temp = svi_2018[svi_2018$countyName == Data_housing_Michael$county[i] & svi_2018$state == Data_housing_Michael$state[i],]$SVI[1]
SVI = c(SVI,svi_temp)
if(Data_housing_Michael$state[i] == "FL")
{
population_temp = population_10_19[population_10_19$state == "Florida" & population_10_19$countyName == Data_housing_Michael$county[i],]$`2018`[1]
population = c(population,population_temp)
homeownership_rate_temp = FL_h[FL_h$Name == Data_housing_Michael$county[i],]$`2018`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
else if(Data_housing_Michael$state[i] == "GA")
{
population_temp = population_10_19[population_10_19$state == "Georgia" & population_10_19$countyName == Data_housing_Michael$county[i],]$`2018`[1]
population = c(population,population_temp)
homeownership_rate_temp = GA_h[GA_h$Name == Data_housing_Michael$county[i],]$`2017`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
hwm_temp = f_Michael[f_Michael$stateName == Data_housing_Michael$state[i] & f_Michael$countyName == Data_housing_Michael$county[i],]$height_above_gnd[1]
hwm = c(hwm,hwm_temp)
}
Data_housing_Michael$SVI = SVI
Data_housing_Michael$population = population
Data_housing_Michael$homeownership_rate = homeownership_rate
Data_housing_Michael$hwm = hwm
Data_housing_Michael$wind_50_up = Data_housing_Michael$wind_50_64 + Data_housing_Michael$wind_64_up
Data_housing_Michael[is.na(Data_housing_Michael)] = 0
mapview(us_study_counties,zcol = "Michael1") + draw_track_map(track_Michael)
temp = data.frame(longitude = Data_housing_Michael$longitude, latitude = Data_housing_Michael$latitude, wind_duration_Michael = Data_housing_Michael$wind_50_up, Michael_HWM = Data_housing_Michael$hwm)
Michael_wind_duration = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "wind_duration_Michael", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "wind_duration_Michael")
Michael_wind_duration
Michael_HWM = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "Michael_HWM", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "hwm_Michael")
Michael_HWM
rm(temp)
# LAURA
Data_housing_Laura = Data_all[Data_housing$event_title == "HURRICANE LAURA",]
demand2 = c()
demand1 = c()
for(i in 1:nrow(us_study_counties))
{
demand1 = c(demand1,Data_housing_Laura[Data_housing_Laura$county == us_study_counties$NAME[i] & Data_housing_Laura$state == us_study_counties$STATEFP[i],]$type1[1])
demand2 = c(demand2,Data_housing_Laura[Data_housing_Laura$county == us_study_counties$NAME[i] & Data_housing_Laura$state == us_study_counties$STATEFP[i],]$type2[1])
}
us_study_counties$Laura1 = demand1
us_study_counties$Laura2 = demand2
##collect LAURA Time(distance) , wind and side data
start_node = which(track_Laura$TIME_UTC == "0600" & track_Laura$DATE == "20200827")
wind_34_down = rep(0, nrow(Data_housing_Laura))
wind_34_50 = rep(0, nrow(Data_housing_Laura))
wind_50_64 = rep(0, nrow(Data_housing_Laura))
wind_64_up = rep(0, nrow(Data_housing_Laura))
Data_housing_Laura$wind_34_down = wind_34_down
Data_housing_Laura$wind_34_50 = wind_34_50
Data_housing_Laura$wind_50_64 = wind_50_64
Data_housing_Laura$wind_64_up = wind_64_up
Data_housing_Laura = wind_distance(track_Laura,Data_housing_Laura,start_node)
SVI = c()
population = c()
homeownership_rate = c()
hwm = c()
for(i in 1:nrow(Data_housing_Laura))
{
svi_temp = svi_2020[svi_2020$countyName == Data_housing_Laura$county[i] & svi_2020$state == Data_housing_Laura$state[i],]$SVI[1]
SVI = c(SVI,svi_temp)
if(Data_housing_Laura$state[i] == "LA")
{
population_temp = population_20_21[population_20_21$state == "Louisiana" & population_20_21$countyName == Data_housing_Laura$county[i],]$`2020`[1]
population = c(population,population_temp)
homeownership_rate_temp = LA_h[LA_h$Name == Data_housing_Laura$county[i],]$`2020`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
hwm_temp = f_Laura[f_Laura$stateName == Data_housing_Laura$state[i] & f_Laura$countyName == Data_housing_Laura$county[i],]$height_above_gnd[1]
hwm = c(hwm,hwm_temp)
}
Data_housing_Laura$SVI = SVI
Data_housing_Laura$population = population
Data_housing_Laura$homeownership_rate = homeownership_rate
Data_housing_Laura$hwm = hwm
Data_housing_Laura$wind_50_up = Data_housing_Laura$wind_50_64 + Data_housing_Laura$wind_64_up
Data_housing_Laura[is.na(Data_housing_Laura)] = 0
mapview(us_study_counties,zcol = "Laura1") + draw_track_map(track_Laura)
temp = data.frame(longitude = Data_housing_Laura$longitude, latitude = Data_housing_Laura$latitude, wind_duration_Laura = Data_housing_Laura$wind_50_up, Laura_HWM = Data_housing_Laura$hwm)
Laura_wind_duration = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "wind_duration_Laura", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "wind_duration_Laura")
Laura_wind_duration
Laura_HWM = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "Laura_HWM", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "hwm_Laura")
Laura_HWM
rm(temp)
# SALLY
Data_housing_Sally = Data_all[Data_housing$event_title == "HURRICANE SALLY",]
demand2 = c()
demand1 = c()
for(i in 1:nrow(us_study_counties))
{
demand1 = c(demand1,Data_housing_Sally[Data_housing_Sally$county == us_study_counties$NAME[i] & Data_housing_Sally$state == us_study_counties$STATEFP[i],]$type1[1])
demand2 = c(demand2,Data_housing_Sally[Data_housing_Sally$county == us_study_counties$NAME[i] & Data_housing_Sally$state == us_study_counties$STATEFP[i],]$type2[1])
}
us_study_counties$Sally1 = demand1
us_study_counties$Sally2 = demand2
##collect SALLY Time(distance) , wind and side data
start_node = which(track_Sally$TIME_UTC == "0945" & track_Sally$DATE == "20200916")
wind_34_down = rep(0, nrow(Data_housing_Sally))
wind_34_50 = rep(0, nrow(Data_housing_Sally))
wind_50_64 = rep(0, nrow(Data_housing_Sally))
wind_64_up = rep(0, nrow(Data_housing_Sally))
Data_housing_Sally$wind_34_down = wind_34_down
Data_housing_Sally$wind_34_50 = wind_34_50
Data_housing_Sally$wind_50_64 = wind_50_64
Data_housing_Sally$wind_64_up = wind_64_up
Data_housing_Sally = wind_distance(track_Sally,Data_housing_Sally,start_node)
SVI = c()
population = c()
homeownership_rate = c()
hwm = c()
for(i in 1:nrow(Data_housing_Sally))
{
svi_temp = svi_2020[svi_2020$countyName == Data_housing_Sally$county[i] & svi_2020$state == Data_housing_Sally$state[i],]$SVI[1]
SVI = c(SVI,svi_temp)
if(Data_housing_Sally$state[i] == "AL")
{
population_temp = population_20_21[population_20_21$state == "Alabama" & population_20_21$countyName == Data_housing_Sally$county[i],]$`2020`[1]
population = c(population,population_temp)
homeownership_rate_temp = AL_h[AL_h$Name == Data_housing_Sally$county[i],]$`2020`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
else if(Data_housing_Sally$state[i] == "FL")
{
population_temp = population_20_21[population_20_21$state == "Florida" & population_20_21$countyName == Data_housing_Sally$county[i],]$`2020`[1]
population = c(population,population_temp)
homeownership_rate_temp = FL_h[FL_h$Name == Data_housing_Sally$county[i],]$`2020`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
hwm_temp = f_Sally[f_Sally$stateName == Data_housing_Sally$state[i] & f_Sally$countyName == Data_housing_Sally$county[i],]$height_above_gnd[1]
hwm = c(hwm,hwm_temp)
}
Data_housing_Sally$SVI = SVI
Data_housing_Sally$population = population
Data_housing_Sally$homeownership_rate = homeownership_rate
Data_housing_Sally$hwm = hwm
Data_housing_Sally$wind_50_up = Data_housing_Sally$wind_50_64 + Data_housing_Sally$wind_64_up
Data_housing_Sally[is.na(Data_housing_Sally)] = 0
mapview(us_study_counties,zcol = "Sally1") + draw_track_map(track_Sally)
temp = data.frame(longitude = Data_housing_Sally$longitude, latitude = Data_housing_Sally$latitude, wind_duration_Sally = Data_housing_Sally$wind_50_up, Sally_HWM = Data_housing_Sally$hwm)
Sally_wind_duration = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "wind_duration_Sally", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "wind_duration_Sally")
Sally_wind_duration
Sally_HWM = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "Sally_HWM", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "hwm_Sally")
Sally_HWM
rm(temp)
# DELTA
Data_housing_Delta = Data_all[Data_housing$event_title == "HURRICANE DELTA",]
demand2 = c()
demand1 = c()
for(i in 1:nrow(us_study_counties))
{
demand1 = c(demand1,Data_housing_Delta[Data_housing_Delta$county == us_study_counties$NAME[i] & Data_housing_Delta$state == us_study_counties$STATEFP[i],]$type1[1])
demand2 = c(demand2,Data_housing_Delta[Data_housing_Delta$county == us_study_counties$NAME[i] & Data_housing_Delta$state == us_study_counties$STATEFP[i],]$type2[1])
}
us_study_counties$Delta1 = demand1
us_study_counties$Delta2 = demand2
##collect DELTA Time(distance) , wind and side data
start_node = which(track_Delta$TIME_UTC == "2300" & track_Delta$DATE == "20201009")
wind_34_down = rep(0, nrow(Data_housing_Delta))
wind_34_50 = rep(0, nrow(Data_housing_Delta))
wind_50_64 = rep(0, nrow(Data_housing_Delta))
wind_64_up = rep(0, nrow(Data_housing_Delta))
Data_housing_Delta$wind_34_down = wind_34_down
Data_housing_Delta$wind_34_50 = wind_34_50
Data_housing_Delta$wind_50_64 = wind_50_64
Data_housing_Delta$wind_64_up = wind_64_up
Data_housing_Delta = wind_distance(track_Delta,Data_housing_Delta,start_node)
SVI = c()
population = c()
homeownership_rate = c()
hwm = c()
for(i in 1:nrow(Data_housing_Delta))
{
svi_temp = svi_2020[svi_2020$countyName == Data_housing_Delta$county[i] & svi_2020$state == Data_housing_Delta$state[i],]$SVI[1]
SVI = c(SVI,svi_temp)
if(Data_housing_Delta$state[i] == "LA")
{
population_temp = population_20_21[population_20_21$state == "Louisiana" & population_20_21$countyName == Data_housing_Delta$county[i],]$`2020`[1]
population = c(population,population_temp)
homeownership_rate_temp = LA_h[LA_h$Name == Data_housing_Delta$county[i],]$`2020`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
hwm_temp = f_Delta[f_Delta$stateName == Data_housing_Delta$state[i] & f_Delta$countyName == Data_housing_Delta$county[i],]$height_above_gnd[1]
hwm = c(hwm,hwm_temp)
}
Data_housing_Delta$SVI = SVI
Data_housing_Delta$population = population
Data_housing_Delta$homeownership_rate = homeownership_rate
Data_housing_Delta$hwm = hwm
Data_housing_Delta$wind_50_up = Data_housing_Delta$wind_50_64 + Data_housing_Delta$wind_64_up
Data_housing_Delta[is.na(Data_housing_Delta)] = 0
mapview(us_study_counties,zcol = "Delta1") + draw_track_map(track_Delta)
temp = data.frame(longitude = Data_housing_Delta$longitude, latitude = Data_housing_Delta$latitude, wind_duration_Delta = Data_housing_Delta$wind_50_up, Delta_HWM = Data_housing_Delta$hwm)
Delta_wind_duration = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "wind_duration_Delta", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "wind_duration_Delta")
Delta_wind_duration
Delta_HWM = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "Delta_HWM", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "hwm_Delta")
Delta_HWM
rm(temp)
# IDA
Data_housing_IDA = Data_all[Data_housing$event_title == "HURRICANE IDA",]
demand2 = c()
demand1 = c()
for(i in 1:nrow(us_study_counties))
{
demand1 = c(demand1,Data_housing_IDA[Data_housing_IDA$county == us_study_counties$NAME[i] & Data_housing_IDA$state == us_study_counties$STATEFP[i],]$type1[1])
demand2 = c(demand2,Data_housing_IDA[Data_housing_IDA$county == us_study_counties$NAME[i] & Data_housing_IDA$state == us_study_counties$STATEFP[i],]$type2[1])
}
us_study_counties$Ida1 = demand1
us_study_counties$Ida2 = demand2
##collect IDA Time(distance) , wind and side data
start_node = which(track_Ida$TIME_UTC == "1655" & track_Ida$DATE == "20210829")
wind_34_down = rep(0, nrow(Data_housing_IDA))
wind_34_50 = rep(0, nrow(Data_housing_IDA))
wind_50_64 = rep(0, nrow(Data_housing_IDA))
wind_64_up = rep(0, nrow(Data_housing_IDA))
Data_housing_IDA$wind_34_down = wind_34_down
Data_housing_IDA$wind_34_50 = wind_34_50
Data_housing_IDA$wind_50_64 = wind_50_64
Data_housing_IDA$wind_64_up = wind_64_up
Data_housing_IDA = wind_distance(track_Ida,Data_housing_IDA,start_node)
SVI = c()
population = c()
homeownership_rate = c()
hwm = c()
for(i in 1:nrow(Data_housing_IDA))
{
svi_temp = svi_2020[svi_2020$countyName == Data_housing_IDA$county[i] & svi_2020$state == Data_housing_IDA$state[i],]$SVI[1]
SVI = c(SVI,svi_temp)
if(Data_housing_IDA$state[i] == "LA")
{
population_temp = population_20_21[population_20_21$state == "Louisiana" & population_20_21$countyName == Data_housing_IDA$county[i],]$`2021`[1]
population = c(population,population_temp)
homeownership_rate_temp = LA_h[LA_h$Name == Data_housing_IDA$county[i],]$`2020`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
else if(Data_housing_IDA$state[i] == "MS")
{
population_temp = population_20_21[population_20_21$state == "Mississippi" & population_20_21$countyName == Data_housing_IDA$county[i],]$`2021`[1]
population = c(population,population_temp)
homeownership_rate_temp = MS_h[MS_h$Name == Data_housing_IDA$county[i],]$`2020`[1]
homeownership_rate = c(homeownership_rate,homeownership_rate_temp)
}
hwm_temp = f_Ida[f_Ida$stateName == Data_housing_IDA$state[i] & f_Ida$countyName == Data_housing_IDA$county[i],]$height_above_gnd[1]
hwm = c(hwm,hwm_temp)
}
Data_housing_IDA$SVI = SVI
Data_housing_IDA$population = population
Data_housing_IDA$homeownership_rate = homeownership_rate
Data_housing_IDA$hwm = hwm
Data_housing_IDA$wind_50_up = Data_housing_IDA$wind_50_64 + Data_housing_IDA$wind_64_up
Data_housing_IDA[is.na(Data_housing_IDA)] = 0
mapview(us_study_counties,zcol = "Ida1") + draw_track_map(track_Ida)
temp = data.frame(longitude = Data_housing_IDA$longitude, latitude = Data_housing_IDA$latitude, wind_duration_IDA = Data_housing_IDA$wind_50_up, IDA_HWM = Data_housing_IDA$hwm)
IDA_wind_duration = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "wind_duration_IDA", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "wind_duration_IDA")
IDA_wind_duration
IDA_HWM = mapview(temp, xcol = "longitude", ycol = "latitude", zcol = "IDA_HWM", legend = TRUE, crs = 4269, grid = FALSE, layer3.name = "hwm_IDA")
IDA_HWM
rm(temp)
data_all_temp = rbind(Data_housing_Delta,Data_housing_Florence,Data_housing_Harvey,Data_housing_IDA,Data_housing_Irma,Data_housing_Laura,Data_housing_Michael,Data_housing_Sally)
cor_housing = subset(data_all_temp,select = -c(disasterNumber,county,state,event_title,year,longitude,latitude))
cor(cor_housing)
write.csv(data_all_temp, "result/wind_distance_demand/Data_all.csv", row.names=F)
write.csv(cor_housing, "result/wind_distance_demand/Data_number.csv", row.names=F)
Data_all_reg = rbind(Data_housing_Delta,Data_housing_Florence,Data_housing_Harvey,Data_housing_IDA,Data_housing_Irma,Data_housing_Laura,Data_housing_Michael,Data_housing_Sally)
Data_all_reg = subset(Data_all_reg,select = c(type1,type2,SVI,population,homeownership_rate,wind_34_50,wind_34_down,wind_50_64,wind_64_up,hwm,node1,node2,node3,node4))
wind_exp = c()
wind_dur = c()
for(i in 1:nrow(Data_all_reg))
{
wind_exp_temp = (Data_all_reg$wind_34_down[i]*17 + Data_all_reg$wind_34_50[i]*42 + Data_all_reg$wind_50_64[i]*57 + Data_all_reg$wind_64_up[i]*72)/9
wind_exp = c(wind_exp,wind_exp_temp)
wind_dur_temp = Data_all_reg$wind_50_64[i] + Data_all_reg$wind_64_up[i]
wind_dur = c(wind_dur,wind_dur_temp)
}
Data_all_reg$wind_exp = wind_exp
Data_all_reg$wind_dur = wind_dur
write.csv(Data_all_reg,"data_reg/Data_all_reg.csv", row.names = FALSE)
cor(Data_all_reg)
Y = Data_all_reg$type1
X = data.matrix(Data_all_reg[,c('population','homeownership_rate','SVI','wind_50_64','wind_64_up','hwm','wind_exp','wind_dur','node1','node2','node3','node4')])
cv_model <- cv.glmnet(X, Y, alpha = 1)
#find optimal lambda value that minimizes test MSE
best_lambda <- cv_model$lambda.min
best_lambda
#produce plot of test MSE by lambda value
plot(cv_model)
best_model <- glmnet(X, Y, alpha = 1, lambda = best_lambda)
coef(best_model)
model1 = lm(type1 ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up, data = Data_all_reg)
model2 = lm(type2 ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm, data = Data_all_reg)
summary(model1)
summary(model2)
Data_all_reg[Data_all_reg==0] = 0.00001
b1 = boxcox(type1 ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm, data = Data_all_reg)
lambda1 = b1$x
lik1 = b1$y
bc1 = cbind(lambda1, lik1)
print(bc1[order(-lik1),])
b2 = boxcox(type1 ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm, data = Data_all_reg)
lambda1 = b2$x
lik1 = b2$y
bc2 = cbind(lambda1, lik1)
print(bc2[order(-lik1),])
model1 = lm(type1^(0.1818) ~ population_scale + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm, data = Data_all_reg)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
summary(model1)
summary(model2)
plot(model1)
plot(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
summary(model1)
summary(model2)
plot(model1)
plot(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
summary(model1)
summary(model2)
plot(model1)
plot(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
summary(model1)
summary(model2)
plot(model1)
plot(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_exp + hwm, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_exp + hwm, data = Data_all_reg)
summary(model1)
summary(model2)
plot(model1)
plot(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_dur + hwm, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_dur + hwm, data = Data_all_reg)
summary(model1)
summary(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_dur + hwm+ node1, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_dur + hwm+ node1, data = Data_all_reg)
summary(model1)
summary(model2)
model1_census = lm(type1^(0.1818) ~ population + homeownership_rate + SVI, data = Data_all_reg)
model2_census = lm(type2^(0.1818) ~ population + homeownership_rate + SVI, data = Data_all_reg)
summary(model1_census)
summary(model2_census)
model1_census_landing = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + node1, data = Data_all_reg)
model2_census_landing = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + node1, data = Data_all_reg)
summary(model1_census_landing)
summary(model2_census_landing)
model1 = lm(type1 ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up, data = Data_all_reg)
model2 = lm(type2 ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm, data = Data_all_reg)
summary(model1)
summary(model2)
model1 = lm(type1^(0.1818) ~ population_scale + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm, data = Data_all_reg)
model1 = lm(type1^(0.1818) ~ population_scale + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm, data = Data_all_reg)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm, data = Data_all_reg)
summary(model1)
summary(model2)
plot(model1)
plot(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_50_64 + wind_64_up + hwm + node1, data = Data_all_reg)
summary(model1)
summary(model2)
plot(model1)
plot(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_exp + hwm, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_exp + hwm, data = Data_all_reg)
summary(model1)
summary(model2)
plot(model1)
plot(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_dur + hwm, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_dur + hwm, data = Data_all_reg)
summary(model1)
summary(model2)
model1 = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + wind_dur + hwm+ node1, data = Data_all_reg)
model2 = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + wind_dur + hwm+ node1, data = Data_all_reg)
summary(model1)
summary(model2)
model1_census_landing = lm(type1^(0.1818) ~ population + homeownership_rate + SVI + node1, data = Data_all_reg)
model2_census_landing = lm(type2^(0.1818) ~ population + homeownership_rate + SVI + node1, data = Data_all_reg)
summary(model1_census_landing)
summary(model2_census_landing)
